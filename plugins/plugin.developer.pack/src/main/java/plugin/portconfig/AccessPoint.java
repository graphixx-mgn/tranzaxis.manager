package plugin.portconfig;

import codex.mask.RegexMask;
import codex.model.Access;
import codex.model.Catalog;
import codex.model.Entity;
import codex.model.EntityDefinition;
import codex.type.Bool;
import codex.type.EntityRef;
import codex.type.Str;
import javax.swing.*;

@EntityDefinition(autoGenerated = true)
public class AccessPoint extends Catalog {

    final static String PROP_ADDR = "address";
    final static String PROP_USED = "used";

    public AccessPoint(EntityRef owner, String title) {
        this(owner, null, title);
    }

    public AccessPoint(EntityRef owner, ImageIcon icon, String title) {
        super(owner, icon, title, null);
        AccessPointSettings settings = loadSettings();
        if (settings.title != null) {
            setTitle(settings.title);
        }

        //Properties
        model.addUserProp(PROP_ADDR, new Str(settings.address).setMask(new RegexMask(
                "((([0-1]?[0-9]{1,2}\\.)|(2[0-4][0-9]\\.)|(25[0-5]\\.)){3}(([0-1]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))|[^\\s]+):"+
                        "(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])",
                "[Invalid Address]"
        )), false, null);
        model.addDynamicProp(PROP_USED, new Bool(settings.used), Access.Any, null);
    }

    @Override
    public boolean isOverridable() {
        return false;
    }

    @Override
    public Class<? extends Entity> getChildClass() {
        return null;
    }

    protected AccessPointSettings loadSettings() {
        return new AccessPointSettings(null, null, null);
    }

    protected void saveSettings() {}

    protected final String getAddress(boolean unsaved) {
        return (String) (unsaved ? model.getUnsavedValue(PROP_ADDR) : model.getValue(PROP_ADDR));
    }

    public final Boolean getUsed() {
        return (Boolean) model.getValue(PROP_USED);
    }

    final void setAddress(String address) {
        model.setValue(PROP_ADDR, address);
    }

    public static class AccessPointSettings {
        String  title;
        String  address;
        Boolean used;

        public AccessPointSettings(String title, String address, Boolean used) {
            this.title = title;
            this.address = address;
            this.used = Boolean.TRUE.equals(used);
        }
    }

}
